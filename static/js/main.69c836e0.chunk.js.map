{"version":3,"sources":["reportWebVitals.js","Card.js","Cardlist.js","SearchBox.js","Scroll.js","ErrorBoundary.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","OnsearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"4LAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yCCOCQ,EAZJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACjB,OACK,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,6BAAKC,IACL,4BAAIC,QCYFI,EAjBF,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACX,OACI,8BACFA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACE,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZO,EAAKT,UCKHW,EAXC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,qBAAKT,UAAU,UAAf,SACI,uBAAOU,KAAK,SACXC,YAAY,gBACZC,SAAUH,OCGRI,G,OARF,SAACC,GACV,OACG,qBAAKC,MAAO,CAACC,SAAS,SAAWC,OAAO,kBAAoBC,OAAO,SAAnE,SACKJ,EAAMK,aCiBHC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,8DAMAC,EAAMC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGvB,OAAGG,KAAKJ,MAAMC,SACH,0DAGAG,KAAKX,MAAMK,a,GAfFQ,aC8CbC,E,kDAxCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAP1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJP,E,gEAWO,IAAD,OAChBG,MAAM,8CACD5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAErC,IAAD,SAC2BZ,KAAKJ,MAA7BjB,EADH,EACGA,OACFkC,GAFD,EACWP,YACON,KAAKJ,MAAMjB,OAAOmC,QAAO,SAACC,GAC7C,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,mBAEpE,OAAKrC,EAAOuC,OAKJ,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,SAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,WAT3B,6C,GAvBDX,a,OCClBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.69c836e0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=({id,name,email})=>{\r\n    return( \r\n         <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n             <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n             <h2>{name}</h2> \r\n             <p>{email}</p>\r\n         </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nlet Cardlist=({robots})=>{\r\n    return(\r\n        <div>\r\n     {robots.map((user,i)=>{\r\n      return(\r\n        <Card \r\n        key={user.id} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n         />\r\n      );\r\n    })}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n \r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <div className=\"pa3 own\">\r\n            <input type=\"search\" \r\n             placeholder=\"search robots\"\r\n             onChange={searchChange}\r\n             />\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n       <div style={{overflow:\"scroll\" , border:\"5px solid black\" , height:'800px'}}>\r\n           {props.children}\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n       this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops!, that's not good</h1>\r\n        }\r\n        else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport Cardlist from './Cardlist';\r\nimport SearchBox from './SearchBox';\r\nimport { render } from '@testing-library/react';\r\nimport Scroll from \"./Scroll.js\";\r\nimport ErrorBoundary from \"./ErrorBoundary.js\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    OnsearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = this.state.robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        });\r\n        if (!robots.length) {\r\n            return <h1>loading</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className='f1 own'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.OnsearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <Cardlist robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}